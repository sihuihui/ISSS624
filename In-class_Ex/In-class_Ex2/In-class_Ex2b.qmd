---
title: "In-Class Exercise 2B: Global and Local Spatial Autocorrelations"
subtitle: "Using sfdep package" 
author: "Goh Si Hui"
date: 2023/11/25
date-format: long
date-modified: "last-modified"
format: html 
execute: 
  echo: true
  eval: true
  warning: false
editor: visual 
---

## Overview 

For this task, we will be learning how to compute global and local spatial autocorrelations using the sfdep package.

## Getting Started 

We will first load the necessary packages using the following code chunk:

-   **tmap**: for thematic mapping
-   **sf**: for geospatial data handling (e.g. importing and exporting for spatial data and geoprocessing)
-   **tidyverse**: a family of R packages for non-spatial data handling
-   **knitr**: to generate static html tables
-   **sfdep**: to calculate spatial weights and matrices, space time cube and hot spot analysis
-   **plotly**: to make the graphs interactive 

```{r}
pacman::p_load(tmap, sf, tidyverse, sfdep, knitr, plotly)
```

## Preparing the Geospatial Data

### Importing the data

```{r}
hunan <- st_read(dsn = "data/geospatial", layer="Hunan")
```

From the above outcome, we know that `hunan`data is simple feature (sf) data frame with 88 features (each representing 1 geographical entity), and each feature is a polygon.It uses the WGS84 projection.

## Preparing the Aspatial Data

### Importing the data

```{r}
hunan2012 <- read.csv("data/aspatial/Hunan_2012.csv")
```

## Combining Both Data Frames Using Left Join

```{r}
hunan_GDPPC<- left_join(hunan, hunan2012) %>% 
                select(1:4, 7, 15)
```

When joining these 2 data frames, we did not specify the `by=` because there is a common column in both data frames (i.e., Country )

Other than joining both data frames, we also use `select()` to pick the relevant columns that we want. Note that the geometry column was retained even though it was not specified.

::: callout-Note
We typically use a left join with a spatial layer (e.g. hunan) and nonspatial layer (hunan_GDPPC) so that we can retain spatial geometric properties.
:::

## Plotting the choropleth Map

We use the following code to visualise the choropleth map of Hunan's 2012 GDPPC.

```{r}
tmap_mode("plot")
tm_shape(hunan_GDPPC) +
  tm_fill("GDPPC",
          style = "quantile",
          palette = "Blues",
          title = "GDPPC") + 
  tm_borders(alpha = 0.5) + 
  tm_layout(main.title = "Distribution of GDP per capita by district in Hunan (2012)", main.title.position="center",
            main.title.size = 1.2,
            legend.height = 0.45,
            legend.width = 0.35, 
            frame= TRUE) +
  tm_compass(type = "8star", size=2) +
  tm_scale_bar() +
  tm_grid(alpha = 0.2)

```



